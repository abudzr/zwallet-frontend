{"ast":null,"code":"import axios from \"axios\";\nimport axiosApiInstance from \"../../../helper/axios\";\nimport Swal from \"sweetalert2\";\n\nvar signUpRequest = function signUpRequest() {\n  return {\n    type: \"SIGN_UP_REQUEST\"\n  };\n};\n\nvar signUpSuccess = function signUpSuccess(data) {\n  return {\n    type: \"SIGN_UP_SUCCESS\",\n    payload: data\n  };\n};\n\nvar signUpFailure = function signUpFailure(error) {\n  return {\n    type: \"SIGN_UP_FAILURE\",\n    payload: error\n  };\n};\n\nexport var signUp = function signUp(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var Url = process.env.api;\n      dispatch(signUpRequest());\n      axios.post(\"\".concat(Url, \"/users/\"), data).then(function (res) {\n        dispatch(signUpSuccess(res.data.data));\n        resolve(res.data.message);\n      })[\"catch\"](function (err) {\n        dispatch(signUpFailure(err.response.data.message));\n        reject(new Error(err.response.data.message));\n      });\n    });\n  };\n};\nexport var verify = function verify() {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var Url = process.env.api;\n      axiosApiInstance.get(\"\".concat(Url, \"/users/verify\")).then(function (res) {\n        resolve(res.data.message);\n      })[\"catch\"](function (err) {\n        reject(new Error(err.response.data.message));\n      });\n    });\n  };\n};\nexport var login = function login(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var Url = process.env.api;\n      axios.post(\"\".concat(Url, \"/users/auth/login\"), data).then(function (res) {\n        dispatch({\n          type: \"LOGIN\",\n          payload: res.data.data,\n          role: res.data.data.role,\n          status: true\n        });\n        localStorage.setItem(\"id\", res.data.data.id);\n        localStorage.setItem(\"token\", res.data.data.token);\n        resolve(res.data.message);\n      })[\"catch\"](function (err) {\n        if (err.response) {\n          reject(err.response.data.message);\n        } else {\n          Swal.fire(\"Internal Server Error!.\", \"\", \"error\");\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["F:/xampp/htdocs/arkademy/Zwallet/zwallet/configs/redux/actions/user.js"],"names":["axios","axiosApiInstance","Swal","signUpRequest","type","signUpSuccess","data","payload","signUpFailure","error","signUp","dispatch","Promise","resolve","reject","Url","process","env","api","post","then","res","message","err","response","Error","verify","get","login","role","status","localStorage","setItem","id","token","fire"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport axiosApiInstance from \"../../../helper/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst signUpRequest = () => {\r\n    return { type: \"SIGN_UP_REQUEST\" };\r\n};\r\n\r\nconst signUpSuccess = (data) => {\r\n    return { type: \"SIGN_UP_SUCCESS\", payload: data };\r\n};\r\n\r\nconst signUpFailure = (error) => {\r\n    return { type: \"SIGN_UP_FAILURE\", payload: error };\r\n};\r\n\r\n\r\nexport const signUp = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        const Url = process.env.api;\r\n        dispatch(signUpRequest());\r\n        axios\r\n            .post(`${Url}/users/`, data)\r\n            .then((res) => {\r\n                dispatch(signUpSuccess(res.data.data));\r\n                resolve(res.data.message);\r\n            })\r\n            .catch((err) => {\r\n                dispatch(signUpFailure(err.response.data.message));\r\n                reject(new Error(err.response.data.message));\r\n            });\r\n    });\r\n};\r\n\r\nexport const verify = () => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        const Url = process.env.api;\r\n        axiosApiInstance\r\n            .get(`${Url}/users/verify`)\r\n            .then((res) => {\r\n                resolve(res.data.message);\r\n            })\r\n            .catch((err) => {\r\n                reject(new Error(err.response.data.message));\r\n            });\r\n    });\r\n};\r\n\r\n\r\nexport const login = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        const Url = process.env.api;\r\n        axios\r\n            .post(`${Url}/users/auth/login`, data)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: \"LOGIN\",\r\n                    payload: res.data.data,\r\n                    role: res.data.data.role,\r\n                    status: true,\r\n                });\r\n                localStorage.setItem(\"id\", res.data.data.id)\r\n                localStorage.setItem(\"token\", res.data.data.token);\r\n                resolve(res.data.message);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response) {\r\n                    reject(err.response.data.message);\r\n                } else {\r\n                    Swal.fire(\"Internal Server Error!.\", \"\", \"error\");\r\n                }\r\n            });\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}