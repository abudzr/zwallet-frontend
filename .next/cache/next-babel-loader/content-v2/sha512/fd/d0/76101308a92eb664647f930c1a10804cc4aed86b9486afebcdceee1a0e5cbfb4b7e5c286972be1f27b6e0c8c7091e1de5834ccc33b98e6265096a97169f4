{"ast":null,"code":"import axios from \"axios\";\nimport axiosApiInstance from \"../../../helper/axios\";\nimport Swal from \"sweetalert2\";\n\nconst signUpRequest = () => {\n  return {\n    type: \"SIGN_UP_REQUEST\"\n  };\n};\n\nconst signUpSuccess = data => {\n  return {\n    type: \"SIGN_UP_SUCCESS\",\n    payload: data\n  };\n};\n\nconst signUpFailure = error => {\n  return {\n    type: \"SIGN_UP_FAILURE\",\n    payload: error\n  };\n};\n\nexport const signUp = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    const Url = process.env.api;\n    dispatch(signUpRequest());\n    axios.post(`${Url}/users/`, data).then(res => {\n      dispatch(signUpSuccess(res.data.data));\n      resolve(res.data.message);\n    }).catch(err => {\n      dispatch(signUpFailure(err.response.data.message));\n      reject(new Error(err.response.data.message));\n    });\n  });\n};\nexport const verify = () => dispatch => {\n  return new Promise((resolve, reject) => {\n    const Url = process.env.api;\n    axiosApiInstance.get(`${Url}/users/verify`).then(res => {\n      resolve(res.data.message);\n    }).catch(err => {\n      reject(new Error(err.response.data.message));\n    });\n  });\n};\nexport const login = data => dispatch => {\n  return new Promise((resolve, reject) => {\n    const Url = process.env.api;\n    axios.post(`${Url}/users/auth/login`, data).then(res => {\n      dispatch({\n        type: \"LOGIN\",\n        payload: res.data.data,\n        role: res.data.data.role,\n        status: true\n      });\n      localStorage.setItem(\"id\", res.data.data.id);\n      localStorage.setItem(\"token\", res.data.data.token);\n      resolve(res.data.message);\n    }).catch(err => {\n      if (err.response) {\n        reject(err.response.data.message);\n      } else {\n        Swal.fire(\"Internal Server Error!.\", \"\", \"error\");\n      }\n    });\n  });\n};","map":{"version":3,"sources":["F:/xampp/htdocs/arkademy/Zwallet/zwallet/configs/redux/actions/user.js"],"names":["axios","axiosApiInstance","Swal","signUpRequest","type","signUpSuccess","data","payload","signUpFailure","error","signUp","dispatch","Promise","resolve","reject","Url","process","env","api","post","then","res","message","catch","err","response","Error","verify","get","login","role","status","localStorage","setItem","id","token","fire"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACH,CAFD;;AAIA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAC5B,SAAO;AAAEF,IAAAA,IAAI,EAAE,iBAAR;AAA2BG,IAAAA,OAAO,EAAED;AAApC,GAAP;AACH,CAFD;;AAIA,MAAME,aAAa,GAAIC,KAAD,IAAW;AAC7B,SAAO;AAAEL,IAAAA,IAAI,EAAE,iBAAR;AAA2BG,IAAAA,OAAO,EAAEE;AAApC,GAAP;AACH,CAFD;;AAKA,OAAO,MAAMC,MAAM,GAAIJ,IAAD,IAAWK,QAAD,IAAc;AAC1C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAxB;AACAP,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAH,IAAAA,KAAK,CACAmB,IADL,CACW,GAAEJ,GAAI,SADjB,EAC2BT,IAD3B,EAEKc,IAFL,CAEWC,GAAD,IAAS;AACXV,MAAAA,QAAQ,CAACN,aAAa,CAACgB,GAAG,CAACf,IAAJ,CAASA,IAAV,CAAd,CAAR;AACAO,MAAAA,OAAO,CAACQ,GAAG,CAACf,IAAJ,CAASgB,OAAV,CAAP;AACH,KALL,EAMKC,KANL,CAMYC,GAAD,IAAS;AACZb,MAAAA,QAAQ,CAACH,aAAa,CAACgB,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBgB,OAAnB,CAAd,CAAR;AACAR,MAAAA,MAAM,CAAC,IAAIY,KAAJ,CAAUF,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBgB,OAA5B,CAAD,CAAN;AACH,KATL;AAUH,GAbM,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMK,MAAM,GAAG,MAAOhB,QAAD,IAAc;AACtC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAxB;AACAjB,IAAAA,gBAAgB,CACX2B,GADL,CACU,GAAEb,GAAI,eADhB,EAEKK,IAFL,CAEWC,GAAD,IAAS;AACXR,MAAAA,OAAO,CAACQ,GAAG,CAACf,IAAJ,CAASgB,OAAV,CAAP;AACH,KAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;AACZV,MAAAA,MAAM,CAAC,IAAIY,KAAJ,CAAUF,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBgB,OAA5B,CAAD,CAAN;AACH,KAPL;AAQH,GAVM,CAAP;AAWH,CAZM;AAeP,OAAO,MAAMO,KAAK,GAAIvB,IAAD,IAAWK,QAAD,IAAc;AACzC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAxB;AACAlB,IAAAA,KAAK,CACAmB,IADL,CACW,GAAEJ,GAAI,mBADjB,EACqCT,IADrC,EAEKc,IAFL,CAEWC,GAAD,IAAS;AACXV,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAE,OADD;AAELG,QAAAA,OAAO,EAAEc,GAAG,CAACf,IAAJ,CAASA,IAFb;AAGLwB,QAAAA,IAAI,EAAET,GAAG,CAACf,IAAJ,CAASA,IAAT,CAAcwB,IAHf;AAILC,QAAAA,MAAM,EAAE;AAJH,OAAD,CAAR;AAMAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BZ,GAAG,CAACf,IAAJ,CAASA,IAAT,CAAc4B,EAAzC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BZ,GAAG,CAACf,IAAJ,CAASA,IAAT,CAAc6B,KAA5C;AACAtB,MAAAA,OAAO,CAACQ,GAAG,CAACf,IAAJ,CAASgB,OAAV,CAAP;AACH,KAZL,EAaKC,KAbL,CAaYC,GAAD,IAAS;AACZ,UAAIA,GAAG,CAACC,QAAR,EAAkB;AACdX,QAAAA,MAAM,CAACU,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBgB,OAAnB,CAAN;AACH,OAFD,MAEO;AACHpB,QAAAA,IAAI,CAACkC,IAAL,CAAU,yBAAV,EAAqC,EAArC,EAAyC,OAAzC;AACH;AACJ,KAnBL;AAoBH,GAtBM,CAAP;AAuBH,CAxBM","sourcesContent":["import axios from \"axios\";\r\nimport axiosApiInstance from \"../../../helper/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst signUpRequest = () => {\r\n    return { type: \"SIGN_UP_REQUEST\" };\r\n};\r\n\r\nconst signUpSuccess = (data) => {\r\n    return { type: \"SIGN_UP_SUCCESS\", payload: data };\r\n};\r\n\r\nconst signUpFailure = (error) => {\r\n    return { type: \"SIGN_UP_FAILURE\", payload: error };\r\n};\r\n\r\n\r\nexport const signUp = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        const Url = process.env.api;\r\n        dispatch(signUpRequest());\r\n        axios\r\n            .post(`${Url}/users/`, data)\r\n            .then((res) => {\r\n                dispatch(signUpSuccess(res.data.data));\r\n                resolve(res.data.message);\r\n            })\r\n            .catch((err) => {\r\n                dispatch(signUpFailure(err.response.data.message));\r\n                reject(new Error(err.response.data.message));\r\n            });\r\n    });\r\n};\r\n\r\nexport const verify = () => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        const Url = process.env.api;\r\n        axiosApiInstance\r\n            .get(`${Url}/users/verify`)\r\n            .then((res) => {\r\n                resolve(res.data.message);\r\n            })\r\n            .catch((err) => {\r\n                reject(new Error(err.response.data.message));\r\n            });\r\n    });\r\n};\r\n\r\n\r\nexport const login = (data) => (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        const Url = process.env.api;\r\n        axios\r\n            .post(`${Url}/users/auth/login`, data)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: \"LOGIN\",\r\n                    payload: res.data.data,\r\n                    role: res.data.data.role,\r\n                    status: true,\r\n                });\r\n                localStorage.setItem(\"id\", res.data.data.id)\r\n                localStorage.setItem(\"token\", res.data.data.token);\r\n                resolve(res.data.message);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response) {\r\n                    reject(err.response.data.message);\r\n                } else {\r\n                    Swal.fire(\"Internal Server Error!.\", \"\", \"error\");\r\n                }\r\n            });\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}