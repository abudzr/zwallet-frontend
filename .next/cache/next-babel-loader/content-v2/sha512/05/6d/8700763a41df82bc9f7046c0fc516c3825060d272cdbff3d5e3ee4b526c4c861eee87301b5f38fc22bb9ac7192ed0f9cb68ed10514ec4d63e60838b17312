{"ast":null,"code":"import _regeneratorRuntime from \"F:/xampp/htdocs/arkademy/Zwallet/zwallet/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/xampp/htdocs/arkademy/Zwallet/zwallet/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar axios = require(\"axios\");\n\nvar axiosApiInstance = axios.create(); // const Swal = require(\"sweetalert2\");\n//ambil token dari localstorage\n\nvar token;\n\nif (true) {\n  token = localStorage.getItem(\"token\");\n}\n\naxiosApiInstance.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config.headers = {\n              Authorization: \"Bearer \".concat(token)\n            };\n            return _context.abrupt(\"return\", config);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  Promise.reject(error);\n});\naxiosApiInstance.interceptors.response.use(function (response) {\n  return response;\n}, /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(error) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(error.response.status === 400)) {\n              _context2.next = 3;\n              break;\n            }\n\n            if (!(error.response.data.message === \"Invalid Token\")) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 3:\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default axiosApiInstance;","map":null,"metadata":{},"sourceType":"module"}