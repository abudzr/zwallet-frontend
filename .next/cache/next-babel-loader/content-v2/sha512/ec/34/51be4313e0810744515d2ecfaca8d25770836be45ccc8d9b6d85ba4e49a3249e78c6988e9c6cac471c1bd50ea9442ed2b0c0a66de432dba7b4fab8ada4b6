{"ast":null,"code":"import axios from \"axios\";\nimport axiosApiInstance from \"../../../helper/axios\";\nimport Swal from \"sweetalert2\";\n\nvar signUpRequest = function signUpRequest() {\n  return {\n    type: \"SIGN_UP_REQUEST\"\n  };\n};\n\nvar signUpSuccess = function signUpSuccess(data) {\n  return {\n    type: \"SIGN_UP_SUCCESS\",\n    payload: data\n  };\n};\n\nvar signUpFailure = function signUpFailure(error) {\n  return {\n    type: \"SIGN_UP_FAILURE\",\n    payload: error\n  };\n};\n\nexport var signUp = function signUp(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var Url = process.env.api;\n      dispatch(signUpRequest());\n      axios.post(\"\".concat(Url, \"/users/\"), data).then(function (res) {\n        dispatch(signUpSuccess(res.data.data));\n        resolve(res.data.message);\n      })[\"catch\"](function (err) {\n        dispatch(signUpFailure(err.response.data.message));\n        reject(new Error(err.response.data.message));\n      });\n    });\n  };\n};\nexport var verify = function verify() {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var Url = process.env.api;\n      axiosApiInstance.get(\"\".concat(Url, \"/users/verify\")).then(function (res) {\n        resolve(res.data.message);\n      })[\"catch\"](function (err) {\n        reject(new Error(err.response.data.message));\n      });\n    });\n  };\n};\nexport var login = function login(data) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var Url = process.env.api;\n      axios.post(\"\".concat(Url, \"/users/auth/login\"), data).then(function (res) {\n        dispatch({\n          type: \"LOGIN\",\n          payload: res.data.data,\n          role: res.data.data.role,\n          status: true\n        });\n        localStorage.setItem(\"id\", res.data.data.id);\n        localStorage.setItem(\"token\", res.data.data.token);\n        resolve(res.data.message);\n      })[\"catch\"](function (err) {\n        if (err.response) {\n          reject(err.response.data.message);\n        } else {\n          Swal.fire(\"Internal Server Error!.\", \"\", \"error\");\n        }\n      });\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}