{"ast":null,"code":"import _regeneratorRuntime from \"F:/xampp/htdocs/arkademy/Zwallet/zwallet/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/xampp/htdocs/arkademy/Zwallet/zwallet/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar axios = require(\"axios\");\n\nvar axiosApiInstance = axios.create(); // const Swal = require(\"sweetalert2\");\n//ambil token dari localstorage\n\nvar token;\n\nif (true) {\n  token = localStorage.getItem(\"token\");\n}\n\naxiosApiInstance.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config.headers = {\n              Authorization: \"Bearer \".concat(token)\n            };\n            return _context.abrupt(\"return\", config);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  Promise.reject(error);\n});\naxiosApiInstance.interceptors.response.use(function (response) {\n  return response;\n}, /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(error) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(error.response.status === 400)) {\n              _context2.next = 3;\n              break;\n            }\n\n            if (!(error.response.data.message === \"Invalid Token\")) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 3:\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default axiosApiInstance;","map":{"version":3,"sources":["F:/xampp/htdocs/arkademy/Zwallet/zwallet/helper/axios.js"],"names":["axios","require","axiosApiInstance","create","token","localStorage","getItem","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","status","data","message"],"mappings":";;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,gBAAgB,GAAGF,KAAK,CAACG,MAAN,EAAzB,C,CACA;AAEA;;AACA,IAAIC,KAAJ;;AACA,UAAqB;AACjBA,EAAAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACH;;AAEDJ,gBAAgB,CAACK,YAAjB,CAA8BC,OAA9B,CAAsCC,GAAtC;AAAA,sEACI,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACIA,YAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,cAAAA,aAAa,mBAAYR,KAAZ;AADA,aAAjB;AADJ,6CAIWM,MAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAAA;AAAA;AAAA;AAAA,KAOI,UAACG,KAAD,EAAW;AACPC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CATL;AAYAX,gBAAgB,CAACK,YAAjB,CAA8BS,QAA9B,CAAuCP,GAAvC,CACI,UAACO,QAAD,EAAc;AACV,SAAOA,QAAP;AACH,CAHL;AAAA,uEAII,kBAAgBH,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GADlC;AAAA;AAAA;AAAA;;AAAA,kBAEYJ,KAAK,CAACG,QAAN,CAAeE,IAAf,CAAoBC,OAApB,KAAgC,eAF5C;AAAA;AAAA;AAAA;;AAAA,8CAGmBL,OAAO,CAACC,MAAR,CAAeF,KAAf,CAHnB;;AAAA;AAAA,8CAMWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJJ;;AAAA;AAAA;AAAA;AAAA;AAcA,eAAeX,gBAAf","sourcesContent":["const axios = require(\"axios\");\r\nconst axiosApiInstance = axios.create();\r\n// const Swal = require(\"sweetalert2\");\r\n\r\n//ambil token dari localstorage\r\nlet token;\r\nif (process.browser) {\r\n    token = localStorage.getItem(\"token\");\r\n}\r\n\r\naxiosApiInstance.interceptors.request.use(\r\n    async (config) => {\r\n        config.headers = {\r\n            Authorization: `Bearer ${token}`,\r\n        };\r\n        return config;\r\n    },\r\n    (error) => {\r\n        Promise.reject(error);\r\n    }\r\n);\r\n\r\naxiosApiInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    async function (error) {\r\n        if (error.response.status === 400) {\r\n            if (error.response.data.message === \"Invalid Token\") {\r\n                return Promise.reject(error);\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosApiInstance;"]},"metadata":{},"sourceType":"module"}